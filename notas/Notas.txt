---INICIAR UM PROJETO NO NODE JS ---

➜ npm init - Digite na "raiz" do projeto, serve para iniciar o projeto 

➜ enpm install ou npm i - são as instalações das bibliotecas do node onde ele chama de 'MODULE'

★ O npm init cria o arquivo chamado "package.json", este arquivo é usado pelo npm/node
para 'administrar' os módulos/bibliotecas/libs do projeto.

Para usar um projeto que usa o node, é só fazer download do projeto, abrir um terminal
ir para a porta do projeto e digitar esse comando "npm instal" sem parâmetro, neste 
processo o npm irá localizar o arquivo e vai instalar todas as dependências do projeto. 
Para rodar o projeto, após instalar as dependências, na raiz do projeto, digite: 
"node (arquivo do projeto).js"

--- GIT ---

"git clone <link do repositorio>"

Caso já exista uma pasta com o nome do repositorio e esta pasta esteja vazia, o cloneirá ser feito,
caso a pasta contenha algum arquivo , o 'git clone' não ira funcionar, para este caso digite:
"git clone <nome do repositorio> nome da pasta" onde "nome da pasta" precisa ser diferente da
pasta do repositorio. Por padrão o git cria a pasta com o nome do repositorio

 --- FUNCIONAMENTO DO EXPRESS ---

➜ Implementa rotas, middlewares e renderização de páginas para "TEMPLATES"

★ Middlewares - Termo usado para indentificar extensões a um LIB existente.

As rotas e renderização são considerados middlewares, criados pela a equipe de 
desenvolvimento do ExpressJS. O ExpressJS implementa e melhora a biblioteca do
nodeJS que manipula o protocolo HTTP/HTTPS

No ExpressJS, para configurar uma pasta, no sistema de arquivos, o metodo utilizado
é o 'use', este método precisa de dois parâmetros, o primiero, é como o cliente HTTP
irá requisitar o arquivo, ou seja, este parâmetro fará parte da URL que o BROWSER(cliente)
irá solicitar.

O segundo parâmetro é o caminho da porta, no sistema de arquivos do sistema operacional
em que o back-end está rodando. Portanto deve-se obedecer as regras do sistemas de arquivos do SO

-> EXEMPLO <-

app.use("/static", express.static( __dirname + "/static"));

NA QUAL:

"/static" = "ENDPOINT"/"rota" que o cliente irá visualizar

express.static = Middleware p/configurar uma "pasta" c/ arquivo estaticos

( __dirname + "/static")) = "__dirname ", é uma variável interna do node, ela indentifica a pasta
do projeto no SO (Sistemas de Arquivos)

--- EJS ---

O EJS é o middleware usado para "renderizar" as páginas HTML/CSS na sua aplicação. Todos os 
arquivos pelo EJS devem ter a extensão ".ejs", o arquivo pode conter: HTML/CSS/JavaScript
além disso conter "scripts" para renderizar as páginas no servidor e formar o arquivo final,
que será enviado ao cliente
